--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   exts/extensions/extensions/tasks/locomotion_recovery/velocity/__pycache__/velocity_env_cfg.cpython-310.pyc
	modified:   exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/__pycache__/rewards.cpython-310.pyc
	modified:   exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/rewards.py
	modified:   exts/extensions/extensions/tasks/locomotion_recovery/velocity/velocity_env_cfg.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	logs/rsl_rl/anymal_d_flat/2025-01-17_15-41-29/events.out.tfevents.1737103301.fibo3.60261.0
	logs/rsl_rl/anymal_d_flat/2025-01-22_13-47-38/
	outputs/2025-01-22/

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/__pycache__/velocity_env_cfg.cpython-310.pyc b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/__pycache__/velocity_env_cfg.cpython-310.pyc
index 4e6f97f..1ef2374 100644
Binary files a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/__pycache__/velocity_env_cfg.cpython-310.pyc and b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/__pycache__/velocity_env_cfg.cpython-310.pyc differ
diff --git a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/__pycache__/rewards.cpython-310.pyc b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/__pycache__/rewards.cpython-310.pyc
index 4ce6bf3..42dd195 100644
Binary files a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/__pycache__/rewards.cpython-310.pyc and b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/__pycache__/rewards.cpython-310.pyc differ
diff --git a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/rewards.py b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/rewards.py
index 20c22d9..b338a4d 100644
--- a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/rewards.py
+++ b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/mdp/rewards.py
@@ -124,6 +124,9 @@ def base_height_toggle(
     return reward_toggle
 
 
+
+
+
 """
 Step reward for get up and walk
 """
@@ -191,4 +194,83 @@ def step_reward(
         height_toggle_reward
     )
 
-    return combined_reward
\ No newline at end of file
+    return combined_reward
+
+
+def vel_xy_toggle(
+    env: ManagerBasedRLEnv,
+    target_height: float,
+    std: float,
+    command_name: str,
+    asset_cfg: SceneEntityCfg = SceneEntityCfg("robot"),
+) -> torch.Tensor:
+    """
+    Reward function 1: Uses track_lin_vel_xy_exp if current height >= target height,
+    otherwise sets reward to 0.
+
+    Args:
+        env: Manager-based RL environment.
+        target_height: Target height for the asset.
+        std: Standard deviation for the XY velocity task reward.
+        command_name: Name of the command to track.
+        asset_cfg: Configuration for the asset entity (default: robot).
+
+    Returns:
+        torch.Tensor: Reward value.
+    """
+    # Extract the asset for height calculations
+    asset: RigidObject = env.scene[asset_cfg.name]
+
+    # Get the current height of the asset
+    current_height = asset.data.root_link_pos_w[:, 2]
+
+    # Calculate velocity reward
+    lin_vel_error = torch.sum(
+        torch.square(
+            env.command_manager.get_command(command_name)[:, :2]
+            - asset.data.root_com_lin_vel_b[:, :2]
+        ),
+        dim=1,
+    )
+    lin_vel_reward = torch.exp(-lin_vel_error / std**2)
+
+    # Apply condition based on height
+    reward = torch.where(current_height >= target_height, lin_vel_reward, torch.zeros_like(lin_vel_reward))
+
+    return reward
+
+
+
+def base_height_exp_toggle(
+    env: ManagerBasedRLEnv,
+    target_height: float,
+    asset_cfg: SceneEntityCfg = SceneEntityCfg("robot"),
+    weight_exp_height: float = 1.0,
+) -> torch.Tensor:
+    """
+    Reward function 2: Uses 1 * exp_height_reward if current height >= target height,
+    otherwise sets reward to 0.
+
+    Args:
+        env: Manager-based RL environment.
+        target_height: Target height for the asset.
+        asset_cfg: Configuration for the asset entity (default: robot).
+        exp_scale: Scale factor for exponential height reward.
+
+    Returns:
+        torch.Tensor: Reward value.
+    """
+    # Extract the asset for height calculations
+    asset: RigidObject = env.scene[asset_cfg.name]
+
+    # Get the current height of the asset
+    current_height = asset.data.root_link_pos_w[:, 2]
+
+    # Calculate exponential height reward
+    height_difference = target_height - current_height
+    exp_height_reward = (1 - torch.exp(-torch.square(height_difference))) * weight_exp_height
+
+    # Apply condition based on height
+    reward = torch.where(current_height >= target_height, 0.5 + exp_height_reward, torch.zeros_like(exp_height_reward))
+
+    return reward
\ No newline at end of file
diff --git a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/velocity_env_cfg.py b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/velocity_env_cfg.py
index 5f79d57..5936e62 100644
--- a/exts/extensions/extensions/tasks/locomotion_recovery/velocity/velocity_env_cfg.py
+++ b/exts/extensions/extensions/tasks/locomotion_recovery/velocity/velocity_env_cfg.py
@@ -223,6 +223,15 @@ class RewardsCfg:
     # track_lin_vel_xy_exp = RewTerm(
     #     func=mdp.track_lin_vel_xy_exp, weight=1.1, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
     # )
+    vel_xy_toggle = RewTerm(
+        func=mdp.vel_xy_toggle, 
+        weight=1.1, 
+        params={
+            "target_height": 0.42,
+            "command_name": "base_velocity", 
+            "std": math.sqrt(0.25)
+            }
+    )
     track_ang_vel_z_exp = RewTerm(
         func=mdp.track_ang_vel_z_exp, weight=0.5, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
     )
@@ -256,25 +265,35 @@ class RewardsCfg:
     #     },
     # )
     # Height of robot reward term configuration
-    base_height_toggle = RewTerm(
-        func=mdp.base_height_toggle,
+    # base_height_toggle = RewTerm(
+    #     func=mdp.base_height_toggle,
+    #     weight=1.0,  # Set weight to 1.0 since it's now a toggle
+    #     params={
+    #         "target_height": 0.44,  # Adjust this if needed
+    #         # "asset_cfg": SceneEntityCfg("robot"),
+    #     },
+    # )
+    # step_reward = RewTerm(
+    #     func=mdp.step_reward,
+    #     weight=1.0,  # Adjust weight if needed
+    #     params={
+    #         "target_height": 0.44,  # Example target height
+    #         "std": math.sqrt(0.25),  # Standard deviation for lin vel reward
+    #         "command_name": "base_velocity",  # Command name for velocity tracking
+    #         "weight_lin_vel" : 1.15,
+    #         "weight_exp_height" : 1.0,
+    #         "weight_height_toggle" : 1.0,
+    #         # Optional: "sensor_cfg": SceneEntityCfg("sensor_name")
+    #     },
+    # )
+
+    base_height_exp_toggle = RewTerm(
+        func=mdp.base_height_exp_toggle,
         weight=1.0,  # Set weight to 1.0 since it's now a toggle
         params={
-            "target_height": 0.44,  # Adjust this if needed
+            "target_height": 0.47,  # Adjust this if needed
             # "asset_cfg": SceneEntityCfg("robot"),
-        },
-    )
-    step_reward = RewTerm(
-        func=mdp.step_reward,
-        weight=1.0,  # Adjust weight if needed
-        params={
-            "target_height": 0.44,  # Example target height
-            "std": math.sqrt(0.25),  # Standard deviation for lin vel reward
-            "command_name": "base_velocity",  # Command name for velocity tracking
-            "weight_lin_vel" : 1.15,
-            "weight_exp_height" : 1.0,
-            "weight_height_toggle" : 1.0,
-            # Optional: "sensor_cfg": SceneEntityCfg("sensor_name")
+            "weight_exp_height": 1.0
         },
     )
 